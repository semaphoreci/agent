version: v1.0
name: Agent
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004

execution_time_limit:
  minutes: 15

fail_fast:
  stop:
    when: true

blocks:
  - name: "Lint"
    dependencies: []
    task:
      env_vars:
        - name: GO111MODULE
          value: "on"

      prologue:
        commands:
          - sem-version go 1.23.8
          - checkout

      jobs:
        - name: Lint
          commands:
            - go install github.com/mgechev/revive@latest
            - make lint

  - name: "Security checks"
    dependencies: []
    task:
      secrets:
        - name: security-toolbox-shared-read-access
      prologue:
        commands:
          - checkout
          - mv ~/.ssh/security-toolbox ~/.ssh/id_rsa
          - sudo chmod 600 ~/.ssh/id_rsa
          - sem-version go 1.23.8
      jobs:
        - name: Check dependencies
          commands:
            - make check.deps
        - name: Check code
          commands:
            - make check.static
        - name: Check docker
          commands:
            - make docker.build
            - make check.docker
      epilogue:
        always:
          commands:
            - 'if [ -f results.xml ]; then test-results publish --name="Security checks" results.xml; fi'

  - name: "Tests"
    dependencies: []
    task:
      env_vars:
        - name: GO111MODULE
          value: "on"

      prologue:
        commands:
          - sem-version go 1.23.8
          - checkout
          - go version
          - go get
          - go build

      jobs:
        - name: Unit Tests
          commands:
            - go install gotest.tools/gotestsum@latest
            - make test

      epilogue:
        always:
          commands:
            - test-results publish junit-report.xml

  - name: "Docker Executor E2E"
    dependencies: []
    task:
      secrets:
        - name: aws-ecr-agent-e2e-secret
        - name: hellopuller
        - name: gcr-test-secret
        - name: docker-registry-test-secret
      env_vars:
        - name: GO111MODULE
          value: "on"
        - name: AWS_REGION
          value: "us-east-1"

      prologue:
        commands:
          - sem-version go 1.23.8
          - checkout
          - go version
          - go get
          - go build
          - mkdir /tmp/agent

      epilogue:
        commands:
          - if [ "$TEST_MODE" = "api" ]; then docker exec -ti agent cat /tmp/agent_log; else docker logs e2e_support_agent_1; fi
          - if [ "$TEST_MODE" = "api" ]; then echo "No hub"; else docker logs e2e_support_hub_1; fi

      jobs:
        - name: Docker
          commands:
            - "make e2e TEST=docker/$TEST"
          matrix:
            - env_var: TEST_MODE
              values:
                - api
                - listen
            - env_var: TEST
              values:
                - hello_world
                - command_aliases
                - env_vars
                - failed_job
                - job_logs_as_artifact
                - job_stopping
                - job_stopping_on_epilogue
                - file_injection
                - file_injection_broken_file_mode
                - stty_restoration
                - epilogue_on_pass
                - epilogue_on_fail
                - docker_in_docker
                - container_env_vars
                - container_options
                - dockerhub_private_image
                - docker_private_image_ecr
                - docker_private_image_ecr_v2
                - docker_private_image_ecr_account_id
                - docker_private_image_ecr_account_id_v2
                - docker_private_image_gcr
                - dockerhub_private_image_bad_creds
                - docker_private_image_ecr_bad_creds
                - docker_private_image_gcr_bad_creds
                - ssh_jump_points
                - no_bash
                - container_custom_name
                - unicode
                - unknown_command
                - broken_unicode
                - check_dev_kvm
                - host_setup_commands
                - multiple_containers
                - compose_v1

  - name: "Hosted E2E tests"
    dependencies: []
    task:
      env_vars:
        - name: GO111MODULE
          value: "on"

      prologue:
        commands:
          - sem-version go 1.23.8
          - checkout
          - go version
          - go get
          - go build
          - mkdir /tmp/agent

      epilogue:
        commands:
          - docker exec -ti agent cat /tmp/agent_log

      jobs:
        - name: Hosted
          commands:
            - "TEST_MODE=api make e2e TEST=hosted/$TEST"
          matrix:
            - env_var: TEST
              values:
                - ssh_jump_points
                - job_logs_as_artifact_default
                - job_logs_as_artifact_always
                - job_logs_as_artifact_compressed
                - job_logs_as_artifact_never
                - job_logs_as_artifact_not_trimmed
                - job_logs_as_artifact_trimmed

  - name: "Self hosted E2E"
    dependencies: []
    task:
      env_vars:
        - name: GO111MODULE
          value: "on"
        - name: TEST_MODE
          value: "listen"

      prologue:
        commands:
          - sem-version go 1.23.8
          - checkout
          - go version
          - go get
          - go build
          - mkdir /tmp/agent

      epilogue:
        commands:
          - docker logs e2e_support_agent_1
          - docker logs e2e_support_hub_1

      jobs:
        - name: Self hosted
          commands:
            - "make e2e TEST=self-hosted/$TEST"
          matrix:
            - env_var: TEST
              values:
                - docker_compose_host_env_vars
                - docker_compose_host_files
                - docker_compose_missing_host_files
                - docker_compose_fail_on_missing_host_files

  - name: "Kubernetes Executor E2E"
    dependencies: []
    task:
      secrets:
        - name: aws-ecr-agent-e2e-secret
        - name: gcr-test-secret
        - name: docker-registry-test-secret
      env_vars:
        - name: GO111MODULE
          value: "on"
        - name: TEST_MODE
          value: "listen"
        - name: AWS_REGION
          value: "us-east-1"

      prologue:
        commands:
          - sem-version go 1.23.8
          - curl -sLO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && install minikube-linux-amd64 /tmp/
          - /tmp/minikube-linux-amd64 config set WantUpdateNotification false
          - /tmp/minikube-linux-amd64 start --driver=docker
          - checkout
          - mkdir /tmp/agent
          # The docker container uses root, and not semaphore
          - grep -rl "/home/semaphore" ~/.kube | xargs sed -i 's/home\/semaphore/root/g'
          - grep -rl "/home/semaphore" ~/.minikube | xargs sed -i 's/home\/semaphore/root/g'

      epilogue:
        commands:
          - docker logs e2e_support_agent_1
          - docker logs e2e_support_hub_1

      jobs:
        - name: Kubernetes executor
          commands:
            - "make e2e TEST=kubernetes/$TEST"
          matrix:
            - env_var: TEST
              values:
                - shell__not-allowed
                - shell__default-image
                - docker_compose__env-vars
                - docker_compose__epilogue
                - docker_compose__file-injection
                - docker_compose__multiple-containers
                - job_logs_as_artifact
                - private_image_gcr
                - private_image_ecr_no_account_id
                - private_image_ecr_with_account_id

after_pipeline:
  task:
    jobs:
      - name: Submit Reports
        commands:
          - test-results gen-pipeline-report

promotions:
  - name: Release
    pipeline_file: "release.yml"
    auto_promote_on:
      - result: passed
        branch:
          - "^refs/tags/v*"
